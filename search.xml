[{"title":"SASS Nesting(중첩)","url":"https://sharryhong.github.io/2016/12/19/sass-nesting/","content":"<img src=\"/2016/12/19/sass-nesting/thumb.png\" alt=\"[sass]\" title=\"[sass]\">\n<p><a href=\"https://github.com/sharryhong/TIL/tree/master/sass/01_First_Sass\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기01</a><br><a href=\"https://github.com/sharryhong/FDS/tree/master/day22-sass\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기02</a></p>\n<h2 id=\"Nesting-중첩\"><a href=\"#Nesting-중첩\" class=\"headerlink\" title=\"Nesting(중첩)\"></a>Nesting(중첩)</h2><p>중첩은 <strong>반복을 제거</strong>하고 스타일링에 <strong>분명한 DOM관계</strong>를 보여줌으로서 코드를 <strong>효율적</strong>으로 만듭니다.</p>\n<p>확장자가 SCSS, SASS 일 때 문법이 다른데,<br>SCSS파일의 경우는 기존의 CSS의 문법과 동일합니다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent &#123;</div><div class=\"line\">  color: blue;</div><div class=\"line\">  .child &#123;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>SASS파일의 경우 <code>{}</code>를 쓰지 않고 들여쓰기로 구분합니다. <code>;</code>도 쓰지 않습니다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent </div><div class=\"line\">  color: blue</div><div class=\"line\">  .child </div><div class=\"line\">    font-size: 12px</div></pre></td></tr></table></figure></p>\n<p>위의 SCSS와 SASS의 CSS 컴파일 결과는 같습니다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent &#123;</div><div class=\"line\">  color: blue;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.parent .child &#123;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"속성에-관련한-Nesting\"><a href=\"#속성에-관련한-Nesting\" class=\"headerlink\" title=\"속성에 관련한 Nesting :\"></a>속성에 관련한 Nesting <code>:</code></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent &#123;</div><div class=\"line\">  font : &#123;</div><div class=\"line\">    family: Roboto, sans-serif;</div><div class=\"line\">    size: 12px;</div><div class=\"line\">    decoration: none;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>컴파일 결과<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent &#123;</div><div class=\"line\">  font-family: Roboto, sans-serif;</div><div class=\"line\">  font-size: 12px;</div><div class=\"line\">  font-decoration: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"amp-부모-참조-선택자-중첩된-구조에서-사용합니다\"><a href=\"#amp-부모-참조-선택자-중첩된-구조에서-사용합니다\" class=\"headerlink\" title=\"&amp; : 부모 참조 선택자. 중첩된 구조에서 사용합니다.\"></a><code>&amp;</code> : 부모 참조 선택자. 중첩된 구조에서 사용합니다.</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.button</div><div class=\"line\">  &amp;:hover</div><div class=\"line\">     background: skyblue</div></pre></td></tr></table></figure>\n<p>컴파일 결과<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.button:hover &#123;</div><div class=\"line\">  background: skyblue;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"extend-선택자-상속-그룹핑-개념으로-선언된-다른-규칙의-내용을-상속받습니다\"><a href=\"#extend-선택자-상속-그룹핑-개념으로-선언된-다른-규칙의-내용을-상속받습니다\" class=\"headerlink\" title=\"@extend : 선택자 상속. 그룹핑 개념으로 선언된 다른 규칙의 내용을 상속받습니다.\"></a><code>@extend</code> : 선택자 상속. 그룹핑 개념으로 선언된 다른 규칙의 내용을 상속받습니다.</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">$btn-radius: 4px</div><div class=\"line\">$btn-align: center</div><div class=\"line\">$btn-gap: .6em</div><div class=\"line\">$btn-bg: #fe9977</div><div class=\"line\"></div><div class=\"line\">.button</div><div class=\"line\">  display: inline-block</div><div class=\"line\">  padding: $btn-gap $btn-gap</div><div class=\"line\">  background: $btn-bg</div><div class=\"line\">  text-align: $btn-align</div><div class=\"line\"></div><div class=\"line\">  &amp;:hover</div><div class=\"line\">    background: skyblue</div><div class=\"line\"></div><div class=\"line\">.button-error</div><div class=\"line\">  @extend .button</div><div class=\"line\">  color: #fff</div><div class=\"line\">  border: 3px solid green</div></pre></td></tr></table></figure>\n<p>컴파일 결과<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">.button, .button-error &#123;</div><div class=\"line\">  display: inline-block;</div><div class=\"line\">  padding: 0.6em 0.6em;</div><div class=\"line\">  background: #fe9977;</div><div class=\"line\">  text-align: center; &#125;</div><div class=\"line\">  .button:hover, .button-error:hover &#123;</div><div class=\"line\">    background: skyblue; &#125;</div><div class=\"line\"></div><div class=\"line\">.button-error &#123;</div><div class=\"line\">  color: #fff;</div><div class=\"line\">  border: 3px solid green; &#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"SASS Variables (변수)","url":"https://sharryhong.github.io/2016/12/19/sass-variable/","content":"<img src=\"/2016/12/19/sass-variable/thumb.png\" alt=\"[sass]\" title=\"[sass]\">\n<p><a href=\"https://github.com/sharryhong/TIL/tree/master/sass/01_First_Sass\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기01</a><br><a href=\"https://github.com/sharryhong/FDS/tree/master/day23-sass\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기02</a></p>\n<p>CSS로 style 코드를 작성하다보면 반복사용 하는 것들을 한번에 관리하면 좋겠다는 생각을 하게 됩니다.<br>이럴 때 사용하면 좋을 문법이 sass의 <strong>변수</strong>입니다. 나중엔 mixin, 함수 개념등을 알면 좋은데 우선 변수만 잘 써도 일이 확 줄어드는 것을 알 수 있습니다. 조으다! ^^</p>\n<h2 id=\"Variables-변수\"><a href=\"#Variables-변수\" class=\"headerlink\" title=\"Variables (변수)\"></a>Variables (변수)</h2><p>변수는 가독성과 유지보수를 향상시켜줍니다.</p>\n<p>문법 : <code>$</code>를 붙여 변수를 만들고 값을 대입합니다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 변수 선언 </div><div class=\"line\">$translucent-white: rgba(255,255,255,0.3);</div><div class=\"line\"></div><div class=\"line\">// 변수 사용시 </div><div class=\"line\">background-color: $translucent-white;</div></pre></td></tr></table></figure></p>\n<h4 id=\"변수이름-작성-규칙\"><a href=\"#변수이름-작성-규칙\" class=\"headerlink\" title=\"변수이름 작성 규칙\"></a>변수이름 작성 규칙</h4><p>변수 이름 사이에 공백을 사용하지 않습니다.<br>변수 이름의 음절 사이에 <code>_</code> , <code>-</code> 등을 사용합니다. <code>_</code> , <code>-</code> 구별을 하지 않습니다.<br>만약 프로그래밍에 익숙해서 camelCase방식이 익숙하다면 사용이 가능하지만 camelCase방식은 함수 이름에 사용되므로 권장하지는 않습니다.</p>\n<p><code>!global</code> : 전역변수처럼 사용가능하게 합니다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#main &#123;</div><div class=\"line\">  $width: 5em !global;</div><div class=\"line\">  width: $width;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#sidebar &#123;</div><div class=\"line\">  width: $width;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><code>!default</code> : 기본값. null값을 제외하곤 다른 값이 우선시됩니다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$set-width: 900px;</div><div class=\"line\">$set-width: 1000px !default</div><div class=\"line\">// 의 경우 900px로 됩니다.</div></pre></td></tr></table></figure></p>\n<h4 id=\"Data-Type-데이터-유형\"><a href=\"#Data-Type-데이터-유형\" class=\"headerlink\" title=\"Data Type (데이터 유형)\"></a>Data Type (데이터 유형)</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">데이터유형</th>\n<th style=\"text-align:right\">설명</th>\n<th style=\"text-align:center\">예</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">null</td>\n<td style=\"text-align:right\">빈 값</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">number</td>\n<td style=\"text-align:right\">숫자</td>\n<td style=\"text-align:center\">1.2, 3, 14px (특이하게 단위가 붙어도 숫자형입니다.)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:right\">문자</td>\n<td style=\"text-align:center\">color (#, rgba, …) “../img/icon.jpg”, ‘Time, serif’, #333</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:right\">논리. true, false</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">list</td>\n<td style=\"text-align:right\">배열 개념</td>\n<td style=\"text-align:center\"><code>1.5em Helvetica bold;</code> or <code>Helvetica, Arial, sans-serif;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">map</td>\n<td style=\"text-align:right\">객체 개념</td>\n<td style=\"text-align:center\"><code>(key1: value1, key2: value2);</code></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Link-AngularJS","url":"https://sharryhong.github.io/2016/12/18/Link-AngularJS/","content":"<p><a href=\"http://blog.jeonghwan.net/2016/08/20/angular-facts-easy-to-miss.html\" target=\"_blank\" rel=\"external\">앵귤러 개발자가 놓치기 쉬운 10가지 사실들 - 김정환님 블로그</a> 포스팅을 보며 앵귤러 코드 리펙토링하고 있습니다.<br>저 글 뿐 아니라 앵귤러 세미나내용도 있으니 우리 썬쓰 SunS(스터디 팀)끼리 열심히 해볼 생각입니다. ^^<br>저도 차근차근 실력쌓아서 도움되는 블로그를 만들고 싶네요. :)</p>\n"},{"title":"2016 정보접근성 기술 컨퍼런스 & WAI-ARIA","url":"https://sharryhong.github.io/2016/12/13/web-aria/","content":"<img src=\"/2016/12/13/web-aria/aria.jpg\" alt=\"[ 소중하다! :) ]\" title=\"[ 소중하다! :) ]\">\n<p>12월 9일 금요일. <strong>UN 인권의 날 기념 - 2016 정보접근성 기술 컨퍼런스</strong>에 다녀왔습니다.<br>집에서 먼 거리에 있어 상암쪽은 살면서 두번째네요~<br>결론은.. 눈 비비며 먼 길 다녀온 보람이 있었다는 것입니다. ^^</p>\n<p>특히 우리 프론트엔드 개발스쿨의 <strong>야무쌤</strong> 파트였던 WAI-ARIA부분은 예전부터 알고 싶던 기술이었기 때문에 더 귀를 쫑끗하며 들었습니다.<br>한국 웹접근성 지침을 잘 따르더라도, 모두가 동등하게 사용하는데에는 부족하다는데요.<br>실제로 스크린리더기 등으로 들어보니 우리가 의도한 바를 어떤 분들은 알기 어렵구나, 그리고 아리아를 적용하는게 생각보다 어렵진 않겠구나를 느꼈습니다. </p>\n<blockquote>\n<p>WAI-ARIA란?<br>접근성이 떨어지기 쉬운 <strong>동적 컨텐츠에 접근성을 보완</strong>하는 기술입니다. </p>\n</blockquote>\n<h3 id=\"접근성이-떨어지기-쉬운-부분은\"><a href=\"#접근성이-떨어지기-쉬운-부분은\" class=\"headerlink\" title=\"접근성이 떨어지기 쉬운 부분은?\"></a>접근성이 떨어지기 쉬운 부분은?</h3><p>동적인 웹 애플리케이션 접근성 보장을 위한 지침이 부족합니다.<br>Ajax를 통한 실시간 변경 콘텐츠를 못 읽을 수 있습니다.<br>페이지 콘텐츠 중 일부만 변경 시, 동일한 내용을 계속 읽어야 하는 문제가 발생합니다.<br>화면을 확대해서 보는 분들의 경우, 가시범위 밖의 콘텐츠 변경 내용을 알기 어렵습니다.<br>그 외에도 많다고 하네요 ㅜㅜ </p>\n<blockquote>\n<p>WAI-ARIA의 목적?<br>마크업에 <code>역할(Role)</code>, <code>속성(Property)</code>, <code>상태(State)</code> 정보를 추가하여<br><strong>스크린 리더</strong> 및 <strong>보조 기기</strong>등에서 <strong>접근성 및 상호운용성</strong>을 향상시키고<br>보다 나은 <strong>사용자경험</strong>(UX)을 제공하기 위함 </p>\n</blockquote>\n<p><a href=\"http://caniuse.com/#search=wai-aria\" target=\"_blank\" rel=\"external\">브라우저 지원현황</a><br>: IE11부터, 대부분의 브라우저가 지원하고 있습니다. </p>\n<p><a href=\"https://github.com/niawa/ARIA\" target=\"_blank\" rel=\"external\">WAI-ARIA 사례 바로가기</a><br>: 야무쌤 포함 여러 전문가들의 노력으로 아리아 사례가 github에 공개되어 있습니다. </p>\n<h4 id=\"세미나-그-후-나의-생각\"><a href=\"#세미나-그-후-나의-생각\" class=\"headerlink\" title=\"세미나 그 후 나의 생각\"></a>세미나 그 후 나의 생각</h4><p>아직 공공기관이나 대기업의 사이트 정도만 웹접근성을 잘 따르려 노력하고 있다고 들었는데, 앞으로는 모두를 위해 천천히라도 적용하였으면 좋겠습니다.<br>웹 접근성을 지키면 사람의 일부가 아니라, 전체에 좋아질거라 생각됩니다.<br>노인을 위한 디자인을 위해, 3년간 노인 분장을 하고 도시를 돌아다녔던 <a href=\"http://m.post.naver.com/viewer/postView.nhn?volumeNo=3353175&amp;memberNo=22225909&amp;vType=VERTICAL\" target=\"_blank\" rel=\"external\">패트리샤 무어의 이야기</a>.. 그 결과 힘이 약한 노인이나 아이들 뿐 아니라, 모두에게 편리한 제품을 디자인할 수 있었습니다.<br>웹, 앱도 다르지 않을거라 생각됩니다. 좋은 서비스에 맞는 좋은 접근성을 제공하여 누구나 쉽고 편리하게 사용하는 서비스를 만들고 싶네요… ^^ </p>\n<h3 id=\"연관-링크\"><a href=\"#연관-링크\" class=\"headerlink\" title=\"연관 링크\"></a>연관 링크</h3><p><a href=\"https://www.w3.org/TR/wai-aria-1.1/\" target=\"_blank\" rel=\"external\">W3C의 WAI-ARIA 1.1</a></p>\n"},{"title":"portfolio-sli.do 서비스 (AngularJS)","url":"https://sharryhong.github.io/2016/12/12/portfolio-slido/","content":"<h2 id=\"Hong’s-portfolio-sli-do-바로가기\"><a href=\"#Hong’s-portfolio-sli-do-바로가기\" class=\"headerlink\" title=\"Hong’s portfolio - sli.do 바로가기\"></a><a href=\"https://sharryhong.github.io/hs_slido/src\">Hong’s portfolio - sli.do 바로가기</a></h2><p><a href=\"https://github.com/sharryhong/TIL/tree/master/angularjs/hs_slido\" target=\"_blank\" rel=\"external\">Github 소스 바로가기</a><br>포트폴리오 주제 : 강의 중 실시간으로 질문, 답변을 받는 서비스 </p>\n<img src=\"/2016/12/12/portfolio-slido/main.jpg\" alt=\"[sli.do service]\" title=\"[sli.do service]\">\n<h4 id=\"포트폴리오-개발-기간\"><a href=\"#포트폴리오-개발-기간\" class=\"headerlink\" title=\"포트폴리오 개발 기간\"></a>포트폴리오 개발 기간</h4><p>2016-11 ~ 공부하며 코드 리펙토링 중입니다.</p>\n<h4 id=\"특징-및-기능\"><a href=\"#특징-및-기능\" class=\"headerlink\" title=\"특징 및 기능\"></a>특징 및 기능</h4><p><code>반응형 웹</code> : 데스크탑, 테블릿, 모바일에 대응하여 적절한 view를 보여줍니다.<br><code>JSON파일의 data</code>를 불러옵니다. (그룹 이름, 작성자 이름, 질문 내용, 좋아요 개수 등)<br>질문을 입력받아 <code>popular(인기순)</code>, <code>Recent(최신순)</code> 대로 보여줍니다.<br>popular(인기순) : <code>좋아요</code> 버튼 클릭시 <code>자동으로 상단</code>으로 이동합니다.<br>질문자 이름을 입력하지 않을 시 <code>Anonymous(익명)</code>로 표시됩니다.<br>질문 내용을 클릭하면 상세페이지로 이동하여 <code>comment(덧글)</code>를 달 수 있습니다.<br>덧글 개수가 JSON data로 저장되어 main에서 숫자로 보여집니다. </p>\n<h4 id=\"사용-Skill\"><a href=\"#사용-Skill\" class=\"headerlink\" title=\"사용 Skill\"></a>사용 Skill</h4><p>JavaScript, AngularJS, JSON, jQuery<br>HTML, SASS to CSS<br>Gulp</p>\n<h4 id=\"주제-선정-이유\"><a href=\"#주제-선정-이유\" class=\"headerlink\" title=\"주제 선정 이유\"></a>주제 선정 이유</h4><p>AngularJS로 서비스를 만들어보고 싶던 중, 생활코딩 세미나에서 <a href=\"https://app.sli.do/event/qao1egje/ask\" target=\"_blank\" rel=\"external\">sli.do의 서비스</a>를 사용하였습니다.<br>사용이 직관적이어서 좋았고, 강의 중 질문을 바로 올리고, 나중에 강사가 모아서 대답을 할 수 있는 좋은 서비스라 생각되어 개발해보고 싶었습니다. </p>\n<h4 id=\"고려사항\"><a href=\"#고려사항\" class=\"headerlink\" title=\"고려사항\"></a>고려사항</h4><p>comment 기능이 있으면 좋을 것 같아 추가하였습니다.<br>JavaScript prototype Class문법<br>크로스 브라우징 : IE9이상 </p>\n"},{"title":"portfolio-선대인경제연구소 사이트","url":"https://sharryhong.github.io/2016/12/09/portfolio-sdi/","content":"<p><a href=\"http://sharry.dothome.co.kr/2016/hs-sdi/index.html\" target=\"_blank\" rel=\"external\">Hong’s portfolio - 선대인경제연구소 main 바로가기</a><br><a href=\"http://sharry.dothome.co.kr/2016/hs-sdi/introduce_01.html\" target=\"_blank\" rel=\"external\">sub page01</a> | <a href=\"http://sharry.dothome.co.kr/2016/hs-sdi/insights_01.html\" target=\"_blank\" rel=\"external\">sub page02-블로그리스트</a> | <a href=\"http://sharry.dothome.co.kr/2016/hs-sdi/insights_01_view.html\" target=\"_blank\" rel=\"external\">sub page03-블로그내용</a></p>\n<img src=\"/2016/12/09/portfolio-sdi/sdi.jpg\" alt=\"[선대인경제연구소 사이트]\" title=\"[선대인경제연구소 사이트]\">\n<h4 id=\"포트폴리오-개발-기간\"><a href=\"#포트폴리오-개발-기간\" class=\"headerlink\" title=\"포트폴리오 개발 기간\"></a>포트폴리오 개발 기간</h4><p>2015-12</p>\n<h4 id=\"특징-및-기능\"><a href=\"#특징-및-기능\" class=\"headerlink\" title=\"특징 및 기능\"></a>특징 및 기능</h4><p><code>웹표준</code>, <code>웹접근성</code> 준수<br>크로스 브라우징 : <code>IE8</code> 이상<br>UI에 초점</p>\n<h4 id=\"사용-Skill\"><a href=\"#사용-Skill\" class=\"headerlink\" title=\"사용 Skill\"></a>사용 Skill</h4><p>HTML, CSS, jQuery, JavaScript, Photoshop</p>\n<h4 id=\"고려사항\"><a href=\"#고려사항\" class=\"headerlink\" title=\"고려사항\"></a>고려사항</h4><p><a href=\"http://www.dbcut.com/\" target=\"_blank\" rel=\"external\">디비컷 사이트</a> 중 UI, 공부에 도움될 만한 사이트를 선별하여 작업하였습니다.<br>이미지로 되어있는 것을 가능하면 text와 font awesome등으로 만들었습니다.</p>\n<blockquote>\n<p>2016년 12월 현재.. <strong>코드 리펙토링</strong>하면 좋을 것들<br>jQuery-UI 라이브러리를 사용한 것을 순수 JavaScript로 개발하면 성능에 더 좋을 것 같습니다.</p>\n</blockquote>\n"},{"title":"portfolio-SK 주식회사 사이트","url":"https://sharryhong.github.io/2016/12/09/portfolio-SK/","content":"<p><a href=\"http://sharry.dothome.co.kr/2016/hs-sk/index.html\" target=\"_blank\" rel=\"external\">Hong’s portfolio - SK 주식회사 main 바로가기</a><br><a href=\"http://sharry.dothome.co.kr/2016/hs-sk/introduce_01.html\" target=\"_blank\" rel=\"external\">sub page01</a> | <a href=\"http://sharry.dothome.co.kr/2016/hs-sk/business_01.html\" target=\"_blank\" rel=\"external\">sub page02</a> | <a href=\"http://sharry.dothome.co.kr/2016/hs-sk/prcenter_01.html\" target=\"_blank\" rel=\"external\">sub page03-게시판리스트</a> | <a href=\"http://sharry.dothome.co.kr/2016/hs-sk/prcenter_01_view.html\" target=\"_blank\" rel=\"external\">sub page04-게시판내용</a></p>\n<img src=\"/2016/12/09/portfolio-SK/sk.jpg\" alt=\"[SK 주식회사 사이트]\" title=\"[SK 주식회사 사이트]\">\n<h4 id=\"포트폴리오-개발-기간\"><a href=\"#포트폴리오-개발-기간\" class=\"headerlink\" title=\"포트폴리오 개발 기간\"></a>포트폴리오 개발 기간</h4><p>2015-11</p>\n<h4 id=\"특징-및-기능\"><a href=\"#특징-및-기능\" class=\"headerlink\" title=\"특징 및 기능\"></a>특징 및 기능</h4><p><code>반응형 웹</code> : 데스크탑, 테블릿, 모바일에 대응하여 적절한 view를 보여줍니다.<br><code>웹표준</code>, <code>웹접근성</code> 준수<br>크로스 브라우징 : <code>IE8</code> 이상 </p>\n<h4 id=\"사용-Skill\"><a href=\"#사용-Skill\" class=\"headerlink\" title=\"사용 Skill\"></a>사용 Skill</h4><p>HTML, CSS, jQuery, JavaScript, Photoshop</p>\n<h4 id=\"고려사항\"><a href=\"#고려사항\" class=\"headerlink\" title=\"고려사항\"></a>고려사항</h4><p>디자인대로 마크업, 의미있는 마크업을 하기 위해 노력하였습니다.<br>개발단계를 고려하여 예상 가능한 부분을 미리 마크업하였습니다.(예 : 게시판의 제목이 길어질 경우)<br>버튼, 게시판 등은 모듈화하여 재사용성을 높였습니다.</p>\n<blockquote>\n<p>2016년 12월 현재.. <strong>코드 리펙토링</strong>하면 좋을 것들<br>반응형을 위한 미디어쿼리를 <code>&lt;head&gt;</code>에서 <code>&lt;link media..&gt;</code>로 설정하였는데, 이럴 경우 성능에 좋지 않는 다는 것을 알게되었습니다.<br>이 부분을 <strong>css상에서 @media</strong>로 코드 리펙토링 하는 게 좋을 것 같습니다. </p>\n</blockquote>\n"},{"title":"Webpack","url":"https://sharryhong.github.io/2016/11/30/Link-webpack/","content":"<p><a href=\"https://perfectacle.github.io/2016/11/18/Module-bundling-with-Webpck/\" target=\"_blank\" rel=\"external\">webpack에 대하여 - 양권성님 블로그</a><br><a href=\"https://hyunseob.github.io/2016/04/03/webpack-practical-guide/\" target=\"_blank\" rel=\"external\">webpack 기본 가이드 - HyunSeob님 블로그</a><br><a href=\"https://github.com/yamoo9/FDS/blob/master/2nd/DAY30/README.md\" target=\"_blank\" rel=\"external\">webpack for Angular+jquery,sass - yamoo9님 github</a></p>\n"},{"title":"CSS 속성 선택자를 활용하여 각 파일포맷별 아이콘 설정하기","url":"https://sharryhong.github.io/2016/11/28/css-icons/","content":"<p><br><br><img src=\"/2016/11/28/css-icons/css-icons.jpg\" alt=\"[결과 이미지]\" title=\"[결과 이미지]\"></p>\n<p><a href=\"https://github.com/sharryhong/TIL/blob/master/javaScript/02_class/js/tabmenu_v02.js\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기</a> | <a href=\"https://sharryhong.github.io/FDS/day06_css/02-css-file-format-type03.html\">결과화면 보기</a></p>\n<h4 id=\"속성-선택자\"><a href=\"#속성-선택자\" class=\"headerlink\" title=\"속성 선택자\"></a>속성 선택자</h4><p>주로 특수한 상황인 요소를 찾을 때 쓰입니다.<br><code>[class=&quot;snack&quot;]</code> : classname이 반드시 snack인 요소 선택<br><code>[class=&quot;snack seeu&quot;]</code> : classname이 반드시 snack seeu인 요소 선택<br><code>[class*=&quot;snack&quot;]</code> : classname에 snack이 있는 요소 선택<br><code>[class^=&quot;snack&quot;]</code> : classname이 snack으로 시작하는 요소 선택<br><code>a[href$=&quot;.docx&quot;]</code> : href 끝나는 값이 .docx인 a요소 선택<br><code>a[href][title][data-href]</code> : 제시된 3가지 속성을 모두 가지고 있는 a요소 선택</p>\n<h4 id=\"핵심-코드-설명\"><a href=\"#핵심-코드-설명\" class=\"headerlink\" title=\"핵심 코드 설명\"></a>핵심 코드 설명</h4><p><a href=\"https://github.com/sharryhong/FDS/blob/master/day06_css/02-css-file-format-type03.html\" target=\"_blank\" rel=\"external\">html 파일</a> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li class=&quot;lecture-file-item&quot;&gt;</div><div class=\"line\">\t&lt;a href=&quot;resources/file.aac&quot;&gt;file-aac&lt;/a&gt;</div><div class=\"line\">&lt;/li&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>다운받을 파일명을 이용하여 background-image를 CSS에 미리 설정해 놓습니다. </li>\n</ul>\n<p><a href=\"(https://github.com/sharryhong/TIL/blob/master/javaScript/02_class/js/tabmenu_v02.js\">CSS 파일</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">a[href$=&quot;.aac&quot;] &#123;</div><div class=\"line\">  background-image: url(&quot;../img/icon-aac.png&quot;);</div><div class=\"line\">&#125;</div><div class=\"line\">...</div><div class=\"line\"></div><div class=\"line\">a[href^=&quot;http://&quot;][target=&quot;_blank&quot;],</div><div class=\"line\">a[href^=&quot;https://&quot;][target=&quot;_blank&quot;] &#123;</div><div class=\"line\">  background-image: url(&quot;../img/external-link.png&quot;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<ul>\n<li><code>^</code> 는 <code>처음 값</code></li>\n<li><code>$</code> 는 <code>마지막 값</code></li>\n<li><code>a[href$=&quot;.aac&quot;]</code> : href속성 마지막 값이 .aac인 a요소 선택</li>\n</ul>\n<h3 id=\"연관-링크\"><a href=\"#연관-링크\" class=\"headerlink\" title=\"연관 링크\"></a>연관 링크</h3><p><a href=\"https://github.com/sharryhong/FDS/tree/master/day06_css\" target=\"_blank\" rel=\"external\">CSS 선택자에 관한 공부 링크 바로가기</a></p>\n"},{"title":"ReactJS ES6","url":"https://sharryhong.github.io/2016/11/28/Link-ReactJS-ES6/","content":"<p><a href=\"https://gomugom.github.io/es6-for-react/index.html\" target=\"_blank\" rel=\"external\">ReactJS를 작성할 때에 알아두면 좋은 ES6 문법들 - 고무곰님의 블로그</a></p>\n"},{"title":"JavaScript TabMenu (ES5_prototype class)","url":"https://sharryhong.github.io/2016/11/28/javascript-tabmenu/","content":"<h3 id=\"JavaScript-프로토타입-방식으로-클래스-만들기-실습-탭-메뉴\"><a href=\"#JavaScript-프로토타입-방식으로-클래스-만들기-실습-탭-메뉴\" class=\"headerlink\" title=\"JavaScript 프로토타입 방식으로 클래스 만들기 실습 - 탭 메뉴\"></a>JavaScript 프로토타입 방식으로 클래스 만들기 실습 - 탭 메뉴</h3><img src=\"/2016/11/28/javascript-tabmenu/tabmenu.jpg\" alt=\"[결과 이미지]\" title=\"[결과 이미지]\">\n<p><a href=\"https://github.com/sharryhong/FDS/blob/master/day06_css/css/file-format-icons03.css\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기</a> | <a href=\"https://sharryhong.github.io/TIL/javaScript/02_class/tabmenu.html\">결과화면 보기</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 2. 함수 단위 -&gt; 프로토타입 방식 클래스 </div><div class=\"line\"></div><div class=\"line\">(function(global, $)&#123;</div><div class=\"line\">&apos;use strict&apos;;</div><div class=\"line\"></div><div class=\"line\">// 인스턴스 생성 \t</div><div class=\"line\">var tabTab1 = new TabMenu();</div><div class=\"line\">var tabTab2 = new TabMenu();</div><div class=\"line\"></div><div class=\"line\">// 클래스 생성, 프로퍼티 생성 </div><div class=\"line\">function TabMenu() &#123;</div><div class=\"line\">\tthis.$tab = null</div><div class=\"line\">\tthis.$tabMenus = null;</div><div class=\"line\">\tthis.$selectMenu = null;</div><div class=\"line\">&#125;</div><div class=\"line\">// 메서드 생성, 요소 초기화  </div><div class=\"line\">TabMenu.prototype.init =function(el)&#123;</div><div class=\"line\">\tthis.$tab = $(el);</div><div class=\"line\">\tthis.$tabMenus = this.$tab.find(&apos;li&apos;);</div><div class=\"line\">\tconsole.log(this);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">TabMenu.prototype.initEvent = function()&#123;</div><div class=\"line\">\tvar objThis = this;\t\t// 아래에 설명 추가 </div><div class=\"line\">\tthis.$tabMenus.on(&quot;click&quot;, function()&#123;</div><div class=\"line\">\t\tobjThis.setSelectMenu($(this));</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">TabMenu.prototype.setSelectMenu = function($thisMenu)&#123;</div><div class=\"line\">\tif(this.$selectMenu)&#123;</div><div class=\"line\">\t\tthis.$selectMenu.removeClass(&apos;select&apos;);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tthis.$selectMenu = $thisMenu;</div><div class=\"line\">\tthis.$selectMenu.addClass(&apos;select&apos;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">tabTab1.init(&apos;#tabMenu1&apos;);</div><div class=\"line\">tabTab1.initEvent();</div><div class=\"line\"></div><div class=\"line\">tabTab2.init(&apos;#tabMenu2&apos;);</div><div class=\"line\">tabTab2.initEvent();</div><div class=\"line\"></div><div class=\"line\">&#125;)(this, this.jQuery);</div></pre></td></tr></table></figure>\n<h4 id=\"this에-대하여\"><a href=\"#this에-대하여\" class=\"headerlink\" title=\"this에 대하여\"></a><code>this</code>에 대하여</h4><p>클릭(이벤트) 전 <code>this</code> 는 아래처럼 구성되어 있습니다. (크롬 개발자도구)<br>클래스에 프로퍼티와, prototype에 메서드가 정의되어 있는 걸 볼 수 있습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">TabMenu</div><div class=\"line\">\t$selectMenu:null</div><div class=\"line\">\t$tab:n.fn.init[1]</div><div class=\"line\">\t$tabMenus:n.fn.init[6]</div><div class=\"line\">\t__proto__: Object\t\t// = prototype</div><div class=\"line\">\tconstructor:TabMenu()</div><div class=\"line\">\tinit: function(el)</div><div class=\"line\">\tinitEvent: function()</div><div class=\"line\">\tsetSelectMenu: function($thisMenu)</div><div class=\"line\">\t__proto__: Object</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">TabMenu.prototype.initEvent = function()&#123;</div><div class=\"line\">\tvar objThis = this;</div><div class=\"line\">\tthis.$tabMenus.on(&quot;click&quot;, function()&#123;</div><div class=\"line\">\t\tobjThis.setSelectMenu($(this));</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>위 코드에서  <code>this.$tabMenus.on(&quot;click&quot;,...</code> 클릭을 하면 <code>this</code>가 <strong>클릭한 li요소</strong>로 되어버립니다.<br>(이벤트에서 this는 이벤트를 발생시킨 객체이기 때문입니다.)<br>따라서 변수 objThis에 본래의 this를 저장하여 <code>objThis.setSelectMenu($(this));</code>로 사용한 것입니다. </p>\n<h3 id=\"연관-링크\"><a href=\"#연관-링크\" class=\"headerlink\" title=\"연관 링크\"></a>연관 링크</h3><p><a href=\"https://sharryhong.github.io/2016/11/26/javascript-class/\">JavaScript ES5 Class - 관련 링크 바로가기</a></p>\n"},{"title":"JavaScript Class (ES5)","url":"https://sharryhong.github.io/2016/11/26/javascript-class/","content":"<img src=\"/2016/11/26/javascript-class/js.png\" alt=\"[JavaScript]\" title=\"[JavaScript]\">\n<p>완전정복 스터디 3권(웹동네)으로 공부 + 코드 리펙토링 :)<br><a href=\"https://github.com/sharryhong/TIL/tree/master/javaScript/02_class\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기</a></p>\n<h2 id=\"Class\"><a href=\"#Class\" class=\"headerlink\" title=\"Class\"></a>Class</h2><p>함수가 특정 알고리즘을 포장하는 기술이라면, 클래스는 연관있는 변수와 함수만을 포장하는 기술입니다.<br>클래스로 포장하는 이유는 <strong>객체 단위</strong>로 코드를 그룹화 하고 <strong>재사용</strong>하기 위함입니다.</p>\n<p>ES6에서는 <em>class</em>가 생겼지만 아직 이전 버전으로 개발을 많이 하고 있습니다. </p>\n<p>JavaScript에서 클래스처럼 사용할 수 있는 방법으로는</p>\n<ol>\n<li>리터럴 방식 </li>\n<li>함수 방식</li>\n<li>프로토타입 방식이 있는데 <strong>프로토타입 방식을 선호</strong>합니다.<br>이유는 아래에 설명하겠습니다. </li>\n</ol>\n<h3 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h3><h5 id=\"인스턴스-객체\"><a href=\"#인스턴스-객체\" class=\"headerlink\" title=\"인스턴스 객체\"></a>인스턴스 객체</h5><p>함수를 사용하려면 함수호출을 해야하듯, 클래스를 사용하려면 일반적으로 인스턴스를 생성해야 합니다.<br>클래스 : 설계도, 인스턴스 : 설계도대로 만들어진 결과물 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var 인스턴스 = new 클래스이름();</div></pre></td></tr></table></figure>\n<p>인스턴스가 만들어지면 클래스에서 포장해 놓은 프로퍼티와 메서드를 사용할 수 있게 됩니다. </p>\n<h5 id=\"프로퍼티-변수\"><a href=\"#프로퍼티-변수\" class=\"headerlink\" title=\"프로퍼티 (변수)\"></a>프로퍼티 (변수)</h5><p>주로 객체 내부에서 사용하는 일반적인 정보, 객체 내부 함수(메서드)에서 처리한 결과값 저장</p>\n<h5 id=\"메서드-함수\"><a href=\"#메서드-함수\" class=\"headerlink\" title=\"메서드 (함수)\"></a>메서드 (함수)</h5><p>주로 객체의 프로퍼티 값을 변경하거나 알아내는 기능, 클래스의 기능들 </p>\n<h5 id=\"생성자\"><a href=\"#생성자\" class=\"headerlink\" title=\"생성자\"></a>생성자</h5><p>인스턴스가 만들어지면서 자동으로 호출되는 함수<br>생성자의 주 용도는 프로퍼티 초기화 역할 담당 </p>\n<h3 id=\"리터럴-방식으로-클래스-만들기\"><a href=\"#리터럴-방식으로-클래스-만들기\" class=\"headerlink\" title=\"리터럴 방식으로 클래스 만들기\"></a>리터럴 방식으로 클래스 만들기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">var 인스턴스 = &#123;</div><div class=\"line\">\t프로퍼티: 초기 값 \t\t\t\t// 프로퍼티 정의</div><div class=\"line\">\t...</div><div class=\"line\">\t메서드: function() &#123;\t\t\t// 메서드 정의</div><div class=\"line\">\t\t...</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 객체 외부에서 접근하기 </div><div class=\"line\">인스턴스.프로퍼티;</div><div class=\"line\">인스턴스.메서드();</div></pre></td></tr></table></figure>\n<p>예 :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;p&quot;).css(&quot;color&quot;, &quot;#f00&quot;);</div></pre></td></tr></table></figure></p>\n<p>$인 함수를 매개변수 값 “p”로 호출<br>$()함수에서 jQuery의 인스턴스를 만들어 리턴해주기 때문에 접근연산자 <code>.</code>를 이용해 jQuery가 제공하는 기능 중 css() 를 호출해 글자색을 변경할 수 있습니다. </p>\n<blockquote>\n<p><strong>특징</strong><br>리터럴 방식에서는 <strong>생성자가 존재하지 않습니다</strong>.<br>리터럴 방식은 <strong>클래스를 정의함과 동시에 자동으로 인스턴스가 만들어집니다</strong>.<br>단점 : <strong>인스턴스를 하나만</strong> 만들 수 있습니다.<br>주 용도 : 여러 개의 데이터를 묶어 값을 보관하거나 함수의 매개변수 값으로 전달할 때 주로 사용합니다. </p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var $ch = $(&quot;#ch&quot;);</div><div class=\"line\">$ch.css(&#123;</div><div class=\"line\">\t&quot;position&quot;: &quot;absolute&quot;,</div><div class=\"line\">\t&quot;top&quot;: 100,</div><div class=\"line\">\t&quot;left&quot;: 100</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"함수-방식으로-클래스-만들기\"><a href=\"#함수-방식으로-클래스-만들기\" class=\"headerlink\" title=\"함수 방식으로 클래스 만들기\"></a>함수 방식으로 클래스 만들기</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 일반 함수와 비교하기 위해 클래스이름은 대문자로 시작하도록 한다. (일반적인 규칙)</div><div class=\"line\">function 클래스이름() &#123;</div><div class=\"line\">\tthis.프로퍼티 = 초기 값; \t\t// 프로퍼티 정의 </div><div class=\"line\">\t...</div><div class=\"line\">\tthis.메서드 = function() &#123; \t// 메서드 정의</div><div class=\"line\">\t  ...</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 인스턴스 생성</div><div class=\"line\">var 인스턴스 = new 클래스이름(); </div><div class=\"line\">// 메서드 호출</div><div class=\"line\">인스턴스.메서드();</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>특징</strong><br>생성자 : <strong>클래스이름 자체가 생성자</strong>이며 <strong>인스턴스가 생성될 때 자동으로 호출</strong>됩니다.<br>장점 : <strong>코드 재사용</strong> 가능<br>단점 : 인스턴스마다 <strong>메서드가 중복해서 생성</strong>됩니다. -&gt; 치명적인 단점</p>\n</blockquote>\n<h3 id=\"프로토타입-방식으로-클래스-만들기\"><a href=\"#프로토타입-방식으로-클래스-만들기\" class=\"headerlink\" title=\"프로토타입 방식으로 클래스 만들기\"></a>프로토타입 방식으로 클래스 만들기</h3><p>클래스를 만드는 방법 중 가장 강력한 방법<br>jQuery도 프로토타입 방식으로 만들어졌다. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function 클래스이름() &#123;</div><div class=\"line\">\tthis.프로퍼티 = 초개 값;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 메서드는 prototype이라는 프로퍼티에 정의한다. </div><div class=\"line\">클래스이름.prototype.메서드 = function() &#123; \t</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 인스턴스 생성</div><div class=\"line\">var 인스턴스 = new 클래스이름();</div><div class=\"line\">// 메서드 호출</div><div class=\"line\">인스턴스.메서드();</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>특징</strong><br><strong>코드 재사용</strong><br>모든 인스턴스는 <strong>prototype</strong>에 만들어져 있는 <strong>메서드를 공유해서 사용</strong>합니다.<br>자바스크립트에서는 prototype을 이용해 <strong>상속을 구현</strong>합니다. </p>\n</blockquote>\n<h3 id=\"연관-링크\"><a href=\"#연관-링크\" class=\"headerlink\" title=\"연관 링크\"></a>연관 링크</h3><p><a href=\"https://sharryhong.github.io/2016/11/28/javascript-tabmenu/\">JavaScript 프로토타입 방식으로 클래스 만들기 실습 - 탭 메뉴</a></p>\n"},{"title":"SASS Satting","url":"https://sharryhong.github.io/2016/11/25/sass-satting/","content":"<img src=\"/2016/11/25/sass-satting/thumb.png\" alt=\"[sass]\" title=\"[sass]\">\n<p><a href=\"https://github.com/sharryhong/FDS/tree/master/day22-sass\" target=\"_blank\" rel=\"external\">해당 코드가 있는 Github 바로가기</a></p>\n<p>CSS Preprocessor 인 SASS. 웹 스타일링을 담당하는 CSS를 좀 더 똘똘하게 사용하고 유지보수를 좋게하는 프리프로세서입니다.</p>\n<h2 id=\"설치-및-Sass-to-CSS\"><a href=\"#설치-및-Sass-to-CSS\" class=\"headerlink\" title=\"설치 및 Sass to CSS\"></a>설치 및 Sass to CSS</h2><p>Sass to CSS를 위해 node sass를 실행합니다. 추후엔 Gulp같은 자동화툴로 관리하도록 합니다. </p>\n<h3 id=\"다운로드-및-설치\"><a href=\"#다운로드-및-설치\" class=\"headerlink\" title=\"다운로드 및 설치\"></a><a href=\"https://git-scm.com\" target=\"_blank\" rel=\"external\">다운로드 및 설치</a></h3><p>git bash : 터미널 방식으로 명령어를 사용하여서 Git를 컨트롤 하는 시스템<br>설치 후 파일탐색기 &gt; 해당폴더 &gt; 마우스 오른쪽 &gt; git bush here 를 클릭하여 터미널을 실행시킵니다. </p>\n<h5 id=\"node-sass-설치\"><a href=\"#node-sass-설치\" class=\"headerlink\" title=\"node sass 설치\"></a>node sass 설치</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install node-sass --global 혹은 </div><div class=\"line\">$ npm i -g node-sass (install global줄여쓴 것)</div></pre></td></tr></table></figure>\n<h3 id=\"sass-gt-css로\"><a href=\"#sass-gt-css로\" class=\"headerlink\" title=\"sass -&gt; css로\"></a>sass -&gt; css로</h3><ol>\n<li><p>sass or scss파일을 만들고 저장 후 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ node-sass -w sass/ -o css/ --source-map css</div></pre></td></tr></table></figure>\n<p>sass폴더내의 sass or scss 파일을 css폴더내의 css파일로 컴파일한다는 뜻<br>sourcemapping이 있어야 개발자도구에서 style.sass이런식으로 표시가 됩니다.</p>\n</li>\n<li><p>css 폴더내에 xxx.css.map 파일이 생깁니다. 배포시엔 map파일을 제외하고 올립니다. </p>\n</li>\n<li><p>sass파일을 수정 후 저장합니다. </p>\n</li>\n<li><p>자, 이제 sass -&gt; css파일로 컴파일 되었습니다. 이젠 css파일은 건드리지 않고 sass파일로만 작업합니다. </p>\n</li>\n</ol>\n<h3 id=\"파일-쪼개고-병합하기\"><a href=\"#파일-쪼개고-병합하기\" class=\"headerlink\" title=\"파일 쪼개고 병합하기\"></a>파일 쪼개고 병합하기</h3><p>예를들어 <code>_footer.sass</code>와 같이 <code>_</code>가 붙으면 병합될 파일이므로 컴파일되지 않습니다.<br>style.sass 에서 <code>@import /part/page/footer</code> 이런 식으로 @import 하여 병합시킵니다.<br>@import시 파일이름의 <code>_</code>, <code>.sass</code>, <code>.scss</code>는 생략할 수 있습니다. </p>\n<h3 id=\"Sublime-Text에서-sass-scss-파일-인지시키기\"><a href=\"#Sublime-Text에서-sass-scss-파일-인지시키기\" class=\"headerlink\" title=\"Sublime Text에서 sass, scss 파일 인지시키기\"></a>Sublime Text에서 sass, scss 파일 인지시키기</h3><ol>\n<li>Sublime Text의 install package에서 syntax highlighting for sass를 설치합니다. </li>\n<li>서브라임 텍스트의 오른쪽 하단에서 sass를 선택합니다. </li>\n</ol>\n<h5 id=\"참고-사이트\"><a href=\"#참고-사이트\" class=\"headerlink\" title=\"참고 사이트\"></a>참고 사이트</h5><ul>\n<li><a href=\"http://sass-lang.com/\" target=\"_blank\" rel=\"external\">Sass-lang.com</a><br><img src=\"thumb.png\" alt=\"Sass\">  </li>\n</ul>\n"},{"title":"About Me","url":"https://sharryhong.github.io/about/index.html","content":"<p><strong>Hong’s keyword</strong> : 호기심, 탐구, 열정, 여행<br><strong>지향점</strong> : 웹표준, 웹접근성 등 기본을 단단히하여 높은 퀄리티의 서비스를 개발하는 Front-End 개발자<br><strong>현재 관심 skill</strong> : HTML, CSS, SASS, Javascript, jQuery, AngularJS, Ionic … </p>\n<p><img src=\"sharry.JPG\" alt=\"Hong Hong\"></p>\n<blockquote>\n<p>Computer Science 전공<br>  -&gt; Flash 개발 (게임, 모션, 이러닝)<br>  -&gt; 각종 삽질?경험 결과 개발이 적성에 맞다고 더욱 깨달음 ^^<br>  -&gt; 2015년 : 웹퍼블리셔가 되기 위해 열공 <a href=\"http://h-web.blog.me/\" target=\"_blank\" rel=\"external\">당시 블로그 바로가기</a><br>  -&gt; 2016년 : 그룹웨어 웹퍼블리싱 개발 프리랜서 경험<br>        <strong>구조(HTML), 표현(CSS), 동작(JavaScript)을 잘 이해하고 구현해야 퀄리티 있는 결과물이 나온다는 생각으로 집중 공부 중.</strong><br>        Fast Campus - Front-End 개발 스쿨 <a href=\"https://github.com/sharryhong\" target=\"_blank\" rel=\"external\">Github에 공부 내용 정리</a><br>  -&gt; 현재 : 회사와 개인이 Win Win 하며 성장할 회사를 찾고 있습니다. </p>\n</blockquote>\n"}]